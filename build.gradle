import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:5.3.0'
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.7.0'
        classpath 'org.javamodularity:moduleplugin:1.8.7'
        classpath 'org.beryx:badass-jlink-plugin:2.23.2'
    }
}

plugins {
    id 'idea'
    id 'java'
    id 'java-library'
    id 'com.google.osdetector' version '1.7.0'
    id 'org.javamodularity.moduleplugin' version '1.8.7'
    id 'org.beryx.jlink' version '2.23.2'
    id 'maven-publish'
    id 'signing'
    id 'net.nemerosa.versioning' version '2.14.0'
    id ("io.github.gradle-nexus.publish-plugin").version("1.1.0")
}

apply plugin: 'biz.aQute.bnd.builder'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = '16'

wrapper {
    gradleVersion = '7.0'
}

description = 'Charts is a JavaFX library containing different kind of charts'

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.openjfx:javafx-base:16:$platform"
    implementation "org.openjfx:javafx-graphics:16:$platform"
    implementation "org.openjfx:javafx-controls:16:$platform"
    implementation "org.openjfx:javafx-swing:16:$platform"
}

mainClassName = "$moduleName/eu.hansolo.fx.charts.Demo"

jar {
    manifest {
        attributes(
                'Built-By'              : System.properties['user.name'],
                'Created-By'            : System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
                'Build-Date'            : project.buildDate,
                'Build-Time'            : project.buildTime,
                'Build-Revision'        : versioning.info.commit,
                'Specification-Title'   : project.name,
                'Specification-Version' : project.version,
                'Implementation-Title'  : project.name,
                'Implementation-Version': project.version,
                'Bundle-Name'           : project.name,
                'Bundle-License'        : 'https://www.apache.org/licenses/LICENSE-2.0;description=Apache License Version 2.0;link=https://www.eclipse.org/legal/eplfaq.php',
                'Bundle-Description'    : description,
                'Bundle-SymbolicName'   : 'eu.hansolo.fx.charts',
                'Export-Package'        : 'eu.hansolo.fx.charts, eu.hansolo.fx.charts.data, eu.hansolo.fx.charts.event, eu.hansolo.fx.charts.series, eu.hansolo.fx.charts.tools, eu.hansolo.fx.geometry, eu.hansolo.fx.geometry.tools, eu.hansolo.fx.geometry.transform'
        )
    }
}

// create one jar for the javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

// create one jar for the source files
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenCustom(MavenPublication) {
            group = 'eu.hansolo.fx'
            artifactId = 'charts'
            version = '16.0.0'

            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'charts'
                description = 'A JavaFX library for scientific charts.'
                url = "https://github.com/HanSolo/charts/wiki"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "HanSolo"
                        name = "Gerrit Grunwald"
                        email = "han.solo@mac.com"
                    }
                }
                scm {
                    connection = "scm:git:https://HanSolo/charts"
                    developerConnection = "scm:git:https://HanSolo/charts"
                    url = "https://github.com/HanSolo/charts"
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username.set(ossrhUsername)
            password.set(ossrhPassword)
        }
    }
}